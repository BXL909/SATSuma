<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel22.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="textBoxHelpText.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>